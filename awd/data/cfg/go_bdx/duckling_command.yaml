# if given, will override the device setting in gym. 
env: 
  numEnvs: 4096
  envSpacing: 1
  episodeLength: 300
  isFlagrun: False
  enableDebugVis: False
  
  pdControl: True
  powerScale: 1.0
  controlFrequencyInv: 2 # 30 Hz
  stateInit: "Hybrid"
  hybridInitProb: 0.3
  numAMPObsSteps: 5
  
  localRootObs: True
  keyBodies: ["left_foot", "right_foot"]
  contactBodies: ["left_foot_link", "right_foot_link"]
  maskJoints: ['neck_pitch', 'head_pitch', 'head_yaw', 'head_roll', 'left_antenna', 'right_antenna']
  maskJointRandomRange: [-0.5, 0.5]
  terminationHeight: -0.05
  enableEarlyTermination: True
  enableTaskObs: True
  randomizeMaskJoints: False
  commandChangeStepsMin: 1000
  commandChangeStepsMax: 1001
  period: 0.84

  asset:
    assetRoot: "awd/data/assets"
    assetFileName: "go_bdx/go_bdx.urdf"

  plane:
    staticFriction: 1.0
    dynamicFriction: 1.0
    restitution: 0.0

  learn:
    # rewards
    linearVelocityXYRewardScale: [1.0, 0.5]
    angularVelocityZRewardScale: 0.5
    torqueRewardScale: -0.001
    feetAirTimeRewardScale: 0.1
    actionRateRewardScale: -0.005

    # normalization
    linearVelocityScale: [2.0, 1.0]
    angularVelocityScale: 0.25
    useAverageVelocities: True

  randomCommandVelocityRanges:
    linear_x: [-0.8, 0.8] # min max [m/s]
    linear_y: [-0.5, 0.5]   # min max [m/s]
    yaw: [-0.0, 0.0]          # min max [rad/s]

sim:
  substeps: 2
  physx:
    num_threads: 4
    solver_type: 1  # 0: pgs, 1: tgs
    num_position_iterations: 4
    num_velocity_iterations: 0
    contact_offset: 0.02
    rest_offset: 0.0
    bounce_threshold_velocity: 0.2
    max_depenetration_velocity: 10.0
    default_buffer_size_multiplier: 10.0
    contact_collection: 1

  flex:
    num_inner_iterations: 10
    warm_start: 0.25


task:
  randomize: False
  randomization_params:
    frequency: 600   # Define how many environment steps between generating new randomizations
    observations:
      range: [0, .002] # range for the white noise
      operation: "additive"
      distribution: "gaussian"
    actions:
      range: [0., .02]
      operation: "additive"
      distribution: "gaussian"
    sim_params: 
      gravity:
        range: [0, 0.4]
        operation: "additive"
        distribution: "gaussian"
        schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
        schedule_steps: 100000
    actor_params:
      duckling:
        color: True
        rigid_body_properties:
          mass: 
            range: [0.8, 1.5]
            operation: "scaling"
            distribution: "uniform"
            setup_only: True # Property will only be randomized once before simulation is started. See Domain Randomization Documentation for more info.
            schedule: "linear"  # "linear" will linearly interpolate between no rand and max rand
            schedule_steps: 100000
        rigid_shape_properties:
          friction:
            num_buckets: 500
            range: [0.7, 1.3]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 100000
          restitution:
            range: [0., 0.7]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 100000
        dof_properties:
          damping: 
            range: [0.8, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 100000
          stiffness: 
            range: [0.8, 1.5]
            operation: "scaling"
            distribution: "uniform"
            schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
            schedule_steps: 100000
          # lower:
          #   range: [0, 0.01]
          #   operation: "additive"
          #   distribution: "gaussian"
          #   schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
          #   schedule_steps: 3000
          # upper:
          #   range: [0, 0.01]
          #   operation: "additive"
          #   distribution: "gaussian"
          #   schedule: "linear"  # "linear" will scale the current random sample by `min(current num steps, schedule_steps) / schedule_steps`
          #   schedule_steps: 3000